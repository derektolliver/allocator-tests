==6784== Memcheck, a memory error detector
==6784== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==6784== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==6784== Command: ./TestAllocator
==6784== 
Running main() from gtest_main.cc
[==========] Running 28 tests from 11 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (18 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (6 ms)
[----------] 2 tests from TestAllocator1/0 (39 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (6 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (5 ms)
[----------] 2 tests from TestAllocator1/1 (11 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (8 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/2 (12 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (9 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/3 (14 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (3 ms)
[----------] 2 tests from TestAllocator2 (6 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (4 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (4 ms)
[----------] 2 tests from TestAllocator3/0 (8 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (4 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator3/1 (8 ms total)

[----------] 4 tests from TestConstructor
[ RUN      ] TestConstructor.smallest_int_allocation
[       OK ] TestConstructor.smallest_int_allocation (4 ms)
[ RUN      ] TestConstructor.smallest_double_allocation
[       OK ] TestConstructor.smallest_double_allocation (5 ms)
[ RUN      ] TestConstructor.bad_allocation
[       OK ] TestConstructor.bad_allocation (42 ms)
[ RUN      ] TestConstructor.large_double_allocation
[       OK ] TestConstructor.large_double_allocation (4 ms)
[----------] 4 tests from TestConstructor (56 ms total)

[----------] 5 tests from TestValid
[ RUN      ] TestValid.valid1
[       OK ] TestValid.valid1 (5 ms)
[ RUN      ] TestValid.valid2
[       OK ] TestValid.valid2 (6 ms)
[ RUN      ] TestValid.not_coalesced
[       OK ] TestValid.not_coalesced (6 ms)
[ RUN      ] TestValid.invalid_sentinal
[       OK ] TestValid.invalid_sentinal (3 ms)
[ RUN      ] TestValid.out_of_bounds
[       OK ] TestValid.out_of_bounds (4 ms)
[----------] 5 tests from TestValid (24 ms total)

[----------] 4 tests from TestAllocate
[ RUN      ] TestAllocate.fill_exact
[       OK ] TestAllocate.fill_exact (11 ms)
[ RUN      ] TestAllocate.fill_more_than_expected
[       OK ] TestAllocate.fill_more_than_expected (5 ms)
[ RUN      ] TestAllocate.N_less_than_zero
[       OK ] TestAllocate.N_less_than_zero (4 ms)
[ RUN      ] TestAllocate.no_space
[       OK ] TestAllocate.no_space (4 ms)
[----------] 4 tests from TestAllocate (25 ms total)

[----------] 1 test from TestDeallocate
[ RUN      ] TestDeallocate.deallocate1
[       OK ] TestDeallocate.deallocate1 (35 ms)
[----------] 1 test from TestDeallocate (35 ms total)

[----------] Global test environment tear-down
[==========] 28 tests from 11 test cases ran. (296 ms total)
[  PASSED  ] 28 tests.
==6784== 
==6784== HEAP SUMMARY:
==6784==     in use at exit: 72,704 bytes in 1 blocks
==6784==   total heap usage: 754 allocs, 753 frees, 200,830 bytes allocated
==6784== 
==6784== LEAK SUMMARY:
==6784==    definitely lost: 0 bytes in 0 blocks
==6784==    indirectly lost: 0 bytes in 0 blocks
==6784==      possibly lost: 0 bytes in 0 blocks
==6784==    still reachable: 72,704 bytes in 1 blocks
==6784==         suppressed: 0 bytes in 0 blocks
==6784== Rerun with --leak-check=full to see details of leaked memory
==6784== 
==6784== For counts of detected and suppressed errors, rerun with: -v
==6784== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Allocator.h'
Lines executed:93.86% of 114
Branches executed:77.99% of 636
Taken at least once:47.17% of 636
Calls executed:20.75% of 212
Creating 'Allocator.h.gcov'
File 'TestAllocator.c++'
Lines executed:94.20% of 207
Branches executed:59.19% of 1088
Taken at least once:30.70% of 1088
Calls executed:48.74% of 1114
Creating 'TestAllocator.c++.gcov'
