==9303== Memcheck, a memory error detector
==9303== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==9303== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==9303== Command: ./TestAllocator
==9303== 
Running main() from gtest_main.cc
[==========] Running 27 tests from 10 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (13 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (5 ms)
[----------] 2 tests from TestAllocator1/0 (31 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/1 (11 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (8 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (14 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (9 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/3 (13 ms total)

[----------] 4 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (2 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (4 ms)
[ RUN      ] TestAllocator2.index_2
[       OK ] TestAllocator2.index_2 (5 ms)
[ RUN      ] TestAllocator2.index_3
[       OK ] TestAllocator2.index_3 (4 ms)
[----------] 4 tests from TestAllocator2 (19 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (8 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (3 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (8 ms total)

[----------] 5 tests from TestAllocator4
[ RUN      ] TestAllocator4.allocate_int
[       OK ] TestAllocator4.allocate_int (5 ms)
[ RUN      ] TestAllocator4.allocate_double
[       OK ] TestAllocator4.allocate_double (8 ms)
[ RUN      ] TestAllocator4.allocate_multiple
[       OK ] TestAllocator4.allocate_multiple (9 ms)
[ RUN      ] TestAllocator4.allocate_bad_alloc
[       OK ] TestAllocator4.allocate_bad_alloc (36 ms)
[ RUN      ] TestAllocator4.allocate_invalid_size
[       OK ] TestAllocator4.allocate_invalid_size (5 ms)
[----------] 5 tests from TestAllocator4 (68 ms total)

[----------] 3 tests from TestAllocator5
[ RUN      ] TestAllocator5.valid1
[       OK ] TestAllocator5.valid1 (2 ms)
[ RUN      ] TestAllocator5.valid2
[       OK ] TestAllocator5.valid2 (3 ms)
[ RUN      ] TestAllocator5.valid3
[       OK ] TestAllocator5.valid3 (3 ms)
[----------] 3 tests from TestAllocator5 (11 ms total)

[----------] 3 tests from TestAllocator6
[ RUN      ] TestAllocator6.deallocate_1
[       OK ] TestAllocator6.deallocate_1 (5 ms)
[ RUN      ] TestAllocator6.deallocate_2
[       OK ] TestAllocator6.deallocate_2 (3 ms)
[ RUN      ] TestAllocator6.deallocate_3
[       OK ] TestAllocator6.deallocate_3 (18 ms)
[----------] 3 tests from TestAllocator6 (29 ms total)

[----------] Global test environment tear-down
[==========] 27 tests from 10 test cases ran. (271 ms total)
[  PASSED  ] 27 tests.
==9303== 
==9303== HEAP SUMMARY:
==9303==     in use at exit: 72,704 bytes in 1 blocks
==9303==   total heap usage: 723 allocs, 722 frees, 196,793 bytes allocated
==9303== 
==9303== LEAK SUMMARY:
==9303==    definitely lost: 0 bytes in 0 blocks
==9303==    indirectly lost: 0 bytes in 0 blocks
==9303==      possibly lost: 0 bytes in 0 blocks
==9303==    still reachable: 72,704 bytes in 1 blocks
==9303==         suppressed: 0 bytes in 0 blocks
==9303== Rerun with --leak-check=full to see details of leaked memory
==9303== 
==9303== For counts of detected and suppressed errors, rerun with: -v
==9303== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Allocator.h'
Lines executed:94.19% of 86
Branches executed:88.60% of 228
Taken at least once:51.32% of 228
Calls executed:61.05% of 190
Creating 'Allocator.h.gcov'
File 'TestAllocator.c++'
Lines executed:92.55% of 161
Branches executed:59.83% of 926
Taken at least once:31.43% of 926
Calls executed:50.21% of 934
Creating 'TestAllocator.c++.gcov'
