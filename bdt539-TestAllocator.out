==642== Memcheck, a memory error detector
==642== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==642== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==642== Command: ./TestAllocator
==642== 
Running main() from gtest_main.cc
[==========] Running 27 tests from 9 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (11 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/0 (23 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/1 (9 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (11 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (14 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (11 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/3 (15 ms total)

[----------] 5 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (4 ms)
[ RUN      ] TestAllocator2.allocate_index
[       OK ] TestAllocator2.allocate_index (4 ms)
[ RUN      ] TestAllocator2.allocate_index_double
[       OK ] TestAllocator2.allocate_index_double (3 ms)
[ RUN      ] TestAllocator2.allocate_index2
[       OK ] TestAllocator2.allocate_index2 (5 ms)
[----------] 5 tests from TestAllocator2 (20 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (6 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (3 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (6 ms total)

[----------] 5 tests from TestAllocator4
[ RUN      ] TestAllocator4.test_container_undersize
[       OK ] TestAllocator4.test_container_undersize (35 ms)
[ RUN      ] TestAllocator4.test_container_oversize
[       OK ] TestAllocator4.test_container_oversize (2 ms)
[ RUN      ] TestAllocator4.max_allocate_1
[       OK ] TestAllocator4.max_allocate_1 (3 ms)
[ RUN      ] TestAllocator4.max_allocate_2
[       OK ] TestAllocator4.max_allocate_2 (2 ms)
[ RUN      ] TestAllocator4.max_allocate_3
[       OK ] TestAllocator4.max_allocate_3 (3 ms)
[----------] 5 tests from TestAllocator4 (45 ms total)

[----------] 5 tests from TestAllocator5
[ RUN      ] TestAllocator5.deallocate_1
[       OK ] TestAllocator5.deallocate_1 (7 ms)
[ RUN      ] TestAllocator5.deallocate_2
[       OK ] TestAllocator5.deallocate_2 (7 ms)
[ RUN      ] TestAllocator5.deallocate_3
[       OK ] TestAllocator5.deallocate_3 (2 ms)
[ RUN      ] TestAllocator5.deallocate_4
[       OK ] TestAllocator5.deallocate_4 (7 ms)
[ RUN      ] TestAllocator5.deallocate_5
[       OK ] TestAllocator5.deallocate_5 (5 ms)
[----------] 5 tests from TestAllocator5 (29 ms total)

[----------] Global test environment tear-down
[==========] 27 tests from 9 test cases ran. (195 ms total)
[  PASSED  ] 27 tests.
==642== 
==642== HEAP SUMMARY:
==642==     in use at exit: 72,704 bytes in 1 blocks
==642==   total heap usage: 810 allocs, 809 frees, 200,447 bytes allocated
==642== 
==642== LEAK SUMMARY:
==642==    definitely lost: 0 bytes in 0 blocks
==642==    indirectly lost: 0 bytes in 0 blocks
==642==      possibly lost: 0 bytes in 0 blocks
==642==    still reachable: 72,704 bytes in 1 blocks
==642==         suppressed: 0 bytes in 0 blocks
==642== Rerun with --leak-check=full to see details of leaked memory
==642== 
==642== For counts of detected and suppressed errors, rerun with: -v
==642== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Allocator.h'
Lines executed:91.40% of 93
Branches executed:81.88% of 276
Taken at least once:49.64% of 276
Calls executed:47.35% of 264
Creating 'Allocator.h.gcov'
File 'TestAllocator.c++'
Lines executed:94.74% of 171
Branches executed:59.12% of 1096
Taken at least once:30.66% of 1096
Calls executed:49.38% of 1207
Creating 'TestAllocator.c++.gcov'
